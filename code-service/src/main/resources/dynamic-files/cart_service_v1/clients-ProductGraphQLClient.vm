#set($found = false)
#set($connectionApiPath = "")
#set($connectionPort = "")
#set($graphql=false)
#foreach($connection in $connections)
    #if($connection.connectedTo.name().startsWith("PRODUCT_SERVICE") && $connection.type.name().startsWith("GRAPHQL"))
        #set($found = true)
        #set($connectionApiPath = $connection.apiPath)
        #set($connectionPort = $connection.port)
        #set($graphql = true)
        #break
    #end
#end
#if($found)
#if($graphql)
package ${package}.clients;

import ${package}.entities.Product;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import java.util.Arrays;
import java.util.List;

@Service
public class ProductGraphQLClient{

    private final RestTemplate restTemplate;
    private static final String BASE_URL = "http://localhost:${connectionPort}/graphql";

    public ProductGraphQLClient(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public List<Product> getAllProducts() {
        ResponseEntity<Product[]> response = restTemplate.getForEntity(BASE_URL, Product[].class);
        return Arrays.asList(response.getBody());
    }

    public Product getProductById(Long id) {
        return restTemplate.getForObject(BASE_URL + "/" + id, Product.class);
    }

    public Product createProduct(Product product) {
        return restTemplate.postForObject(BASE_URL, product, Product.class);
    }

    public Product updateProduct(Long id, Product product) {
        restTemplate.put(BASE_URL + "/" + id, product);
        return getProductById(id);
    }

    public void deleteProduct(Long id) {
        restTemplate.delete(BASE_URL + "/" + id);
    }
}
#end
#end